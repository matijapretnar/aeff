operation listInterrupt : int list
operation productSignal : int

let process_with p comp cont =
  let q = promise (listInterrupt _ ->
    await p until <<x>> in
    let y = comp x in
    return <<y>>) in
  cont q

run
  let p = promise (listInterrupt is -> return <<is>>) in
  process_with p (filter (fun i -> i > 0)) (fun q ->
  process_with q (fold_left (fun j j' -> j * j') 1) (fun r -> 
  process_with r (fun k -> send productSignal k) (fun _ ->
  (fun _ -> return r) ()
  )))

run
  send listInterrupt [-3;-2;-1;0;1;2;3]

